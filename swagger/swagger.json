swagger: '2.0'
info:
  description: This is the api reference for Hey Heroe app
  version: 1.0.0
  title: Hey Heroe API store
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: deliamalvarez@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
basePath: /api
tags:
  - name: hey heroe uy
    description: hey heroe uy
  - name: user
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
schemes:
  - http
paths:
  /category:
    get:
      tags:
        - category
      summary: Get list of categories
      description: ''
      operationId: getListCategory
      produces:
        - application/json
      responses:
        '400':
          description: Invalid input
      security:
        - ApiKeyAuth: []
    post:
      tags:
        - category
      summary: Add a new category
      description: ''
      operationId: addCategory
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Category object that needs to be added to the store
          required: true
          schema:
            $ref: '#/definitions/Category'
      responses:
        '400':
          description: Invalid input
      security:
        - ApiKeyAuth: []
    put:
      tags:
        - category
      summary: Update an existing category
      description: ''
      operationId: updateCategory
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Category object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/Category'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Category not found
        '500':
          description: Internal Server Error
      security:
        - ApiKeyAuth: []
  /category/{id}:
    get:
      tags:
        - category
      summary: Get single category by id
      description: ''
      operationId: getCategoryById
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: 'The id that needs to be fetched. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Category'
        '400':
          description: Invalid categpry id supplied
        '404':
          description: Category not found
  /service/{id}:
    get:
      tags:
        - service
      summary: Get single servcice by id
      description: ''
      operationId: getServiceById
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: 'The id that needs to be fetched. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Service'
        '400':
          description: Invalid Service id supplied
        '404':
          description: Service not found
  /service:
    get:
      tags:
        - service
      summary: Get list of services
      description: ''
      operationId: getListService
      produces:
        - application/json
      responses:
        '400':
          description: Invalid input
      security:
        - ApiKeyAuth: []
    post:
      tags:
        - service
      summary: Add a new service
      description: ''
      operationId: addService
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Service object that needs to be added to the store
          required: true
          schema:
            $ref: '#/definitions/Service'
      responses:
        '400':
          description: Invalid input
      security:
        - ApiKeyAuth: []
    put:
      tags:
        - category
      summary: Update an existing service
      description: ''
      operationId: updateService
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Service object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/Service'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Category not found
        '500':
          description: Internal Server Error
      security:
        - ApiKeyAuth: []
  /user/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: string
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        '400':
          description: Invalid username/password supplied
  /user/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      produces:
        - application/xml
        - application/json
      parameters: []
      responses:
        default:
          description: successful operation
    put:
      tags:
        - user
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      produces:
        - application/json
      parameters:
        - name: username
          in: path
          description: name that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          type: string
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
  '/user/{id}':
    get:
      tags:
        - user
      summary: Get user by user id
      description: ''
      operationId: getUserById
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: 'The id that needs to be fetched. Use 5bd4b30989d7f806b4d5b631 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
securityDefinitions:
  ApiKeyAuth:       
      type: apiKey
      in: header      
      name: Authorization 
definitions:
  Category:
    type: object
    properties:
      id:
        type: string
        format: guid
      name:
        type: string
      description:
        type: string
    xml:
      name: Category
  Service:
    type: object
    properties:
      id:
        type: string
        format: guid
      name:
        type: string
      description:
        type: string
      categoryId:
        type: string
    xml:
      name: Category
  User:
    type: object
    properties:
      id:
        type: string
        format: guid
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      userStatus:
        type: integer
        format: int32
        description: User Status
    xml:
      name: User
  Tag:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Tag
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
